name: Build Android APK from PWA (Native WebView)

on:
  push:
    branches: [ci/build-apk]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-apk:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
        with:
          api-level: 34
          build-tools: '34.0.0'

      - name: Download Gradle
        run: |
          curl -L -o gradle.zip https://services.gradle.org/distributions/gradle-8.7-bin.zip
          unzip -q gradle.zip -d .

    - name: Generate minimal Android project (WebView)
    run: |
      mkdir -p androidapp/app/src/main/java/com/quiz/app
      mkdir -p androidapp/app/src/main/res/values
      mkdir -p androidapp/app/src/main/res/layout
          
      # settings.gradle
      cat > androidapp/settings.gradle << 'EOF'
      rootProject.name = 'QuizApp'
      include ':app'
      EOF
          
      # top-level build.gradle
      cat > androidapp/build.gradle << 'EOF'
      buildscript {
        repositories {
          google()
          mavenCentral()
        }
        dependencies {
          classpath 'com.android.tools.build:gradle:8.5.2'
        }
      }
      allprojects {
        repositories {
          google()
          mavenCentral()
        }
      }
      EOF
          
      # gradle.properties
      cat > androidapp/gradle.properties << 'EOF'
      org.gradle.jvmargs=-Xmx2g -Dfile.encoding=UTF-8
      android.useAndroidX=true
      android.enableJetifier=true
      EOF
          
      # app/build.gradle
      cat > androidapp/app/build.gradle << 'EOF'
      apply plugin: 'com.android.application'

      android {
        namespace 'com.quiz.app'
        compileSdk 34

        defaultConfig {
          applicationId 'com.quiz.app'
          minSdk 23
          targetSdk 34
          versionCode 1
          versionName '1.0'
        }

        buildTypes {
          release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
          }
        }

        compileOptions {
          sourceCompatibility JavaVersion.VERSION_17
          targetCompatibility JavaVersion.VERSION_17
        }
      }

      dependencies {
        implementation 'androidx.appcompat:appcompat:1.7.0'
        implementation 'com.google.android.material:material:1.12.0'
      }
      EOF

      # proguard
      cat > androidapp/app/proguard-rules.pro << 'EOF'
      # Keep default
      EOF

      # AndroidManifest.xml
      cat > androidapp/app/src/main/AndroidManifest.xml << 'EOF'
      <manifest xmlns:android="http://schemas.android.com/apk/res/android"
        package="com.quiz.app">
        <uses-permission android:name="android.permission.INTERNET" />
        <application
          android:allowBackup="true"
          android:label="QuizApp"
          android:supportsRtl="true"
          android:theme="@style/Theme.QuizApp">
          <activity android:name=".MainActivity" android:exported="true">
            <intent-filter>
              <action android:name="android.intent.action.MAIN" />
              <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
          </activity>
        </application>
      </manifest>
      EOF

      # styles.xml
      cat > androidapp/app/src/main/res/values/styles.xml << 'EOF'
      <resources>
        <style name="Theme.QuizApp" parent="Theme.AppCompat.Light.NoActionBar"/>
      </resources>
      EOF

      # strings.xml
      cat > androidapp/app/src/main/res/values/strings.xml << 'EOF'
      <resources>
        <string name="app_name">QuizApp</string>
      </resources>
      EOF

      # MainActivity.java
      cat > androidapp/app/src/main/java/com/quiz/app/MainActivity.java << 'EOF'
      package com.quiz.app;

      import android.os.Bundle;
      import android.webkit.WebSettings;
      import android.webkit.WebView;
      import android.webkit.WebViewClient;

      import androidx.appcompat.app.AppCompatActivity;

      public class MainActivity extends AppCompatActivity {
        @Override
        protected void onCreate(Bundle savedInstanceState) {
          super.onCreate(savedInstanceState);
          WebView webView = new WebView(this);
          setContentView(webView);
          WebSettings settings = webView.getSettings();
          settings.setJavaScriptEnabled(true);
          settings.setDomStorageEnabled(true);
          webView.setWebViewClient(new WebViewClient());
          webView.loadUrl("https://quiz-app-f2d9e.web.app");
        }
      }
      EOF

      - name: Generate Gradle wrapper
        working-directory: androidapp
        run: ../gradle-8.7/bin/gradle wrapper

      - name: Build debug APK (Gradle)
        working-directory: androidapp
        run: |
          chmod +x ./gradlew
          ./gradlew --version
          ./gradlew assembleDebug --stacktrace --warning-mode all

      - name: Copy APK to repo
        run: |
          mkdir -p apk
          cp androidapp/app/build/outputs/apk/debug/app-debug.apk apk/quiz-app-debug.apk

      - name: Upload APK as workflow artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: quiz-app-debug-apk
          path: apk/quiz-app-debug.apk
          if-no-files-found: warn

      - name: Upload Gradle reports (on failure)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: gradle-reports
          path: |
            androidapp/app/build/outputs/**/*
            androidapp/app/build/reports/**/*
            androidapp/build/reports/**/*
          if-no-files-found: warn

      - name: Commit APK artifact to branch
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add apk/quiz-app-debug.apk
          git commit -m "Add built APK artifact [skip ci]" || echo "No changes to commit"
          git push
